#!/usr/bin/env python
#
# Warnup
# Written by Steve Gattuso <steve@stevegattuso.me>
#
# An easier way of deploying code when you can't do it
# the easy way
#
from xtermcolor import colorize
import warnup
import sys, os, subprocess

def show_help():
    print("Warnup usage:")
    print("  warnup [action] [arguments]\n")
    print("Actions:")
    print("  push [file] - Deploys file into production path")
    print("  diff [file] - Shows a diff between the local/production versions")

def print_error(message):
    print(colorize("[error]", 0xff0000) + " %s" % message)

def print_notice(message):
    print(colorize("[notice]", 0xffff00) + " %s" % message)


def config_error():
    print_error("Cannot find warnup configuration file in your current working directory (.warnup)")
    sys.exit(1)

def run_diff():
    config = warnup.get_config()

    if(config == None):
        config_error()

    if(len(sys.argv) < 3):
        print_error("File not specified")
        return

    # Get the paths
    development = config.get("paths", "development")
    production = config.get("paths", "production")
    dev_path = os.path.join(development, sys.argv[2])
    prod_path = os.path.join(production, sys.argv[2])

    if(os.path.exists(dev_path) == False):
        print_error("File %s cannot be found on development" % sys.argv[2])
        return

    if(os.path.exists(prod_path) == False):
        print_notice("File %s does not exist on production" % sys.argv[2])
        print("Try:\n  $ warnup push %s" % sys.argv[2])
        return

    subprocess.call(["diff", dev_path, prod_path])

def main():
    # Check the action
    if(len(sys.argv) == 1):
        show_help()
    elif(sys.argv[1] == "diff"):
        run_diff()
    elif(sys.argv[1] == "push"):
        run_push()


if __name__ == "__main__":
    main()
